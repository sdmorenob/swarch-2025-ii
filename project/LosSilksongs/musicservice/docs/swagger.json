{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "RESTful API for music file management and playlist operations",
        "title": "Music Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.musicshare.com/support",
            "email": "support@musicshare.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/playlists": {
            "get": {
                "description": "List playlists with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "List playlists",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creator ID",
                        "name": "creator_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by public/private",
                        "name": "is_public",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in name or description",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlists retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.PlaylistListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Create playlist",
                "parameters": [
                    {
                        "description": "Playlist information",
                        "name": "playlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePlaylistRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Playlist created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}": {
            "get": {
                "description": "Retrieve playlist information. Use include_tracks=true to get full track information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get playlist details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include full track information",
                        "name": "include_tracks",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid playlist ID",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update playlist information (only creator or collaborators can update)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Update playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID for authorization",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated playlist information",
                        "name": "playlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePlaylistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a playlist (only creator can delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Delete playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID for authorization",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Playlist deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}/tracks": {
            "post": {
                "description": "Add a track to a playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Add track to playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID for authorization",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Track to add",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTrackToPlaylistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track added successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist or track not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Track already in playlist",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/playlists/{id}/tracks/{trackId}": {
            "delete": {
                "description": "Remove a track from a playlist",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Remove track from playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "trackId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID for authorization",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track removed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Playlist"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Playlist or track not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks": {
            "get": {
                "description": "List tracks with optional filtering and pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "List tracks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by genre",
                        "name": "genre",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by artist name",
                        "name": "artist",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by public/private",
                        "name": "is_public",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in title, artist, album, or tags",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tracks retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.TrackListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/upload": {
            "post": {
                "description": "Upload an audio file to the service. Supports MP3, WAV, FLAC, M4A, OGG, AAC formats",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Upload audio track",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Audio file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated tags (e.g., rock,classic)",
                        "name": "tags",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether the track is public",
                        "name": "is_public",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Track uploaded successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Track"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "415": {
                        "description": "Unsupported file type",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}": {
            "get": {
                "description": "Retrieve information about a specific track by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Get track details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Track"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid track ID",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Track not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a track (only the owner can delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Delete track",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID for authorization",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/rest.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Track not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tracks/{id}/stream": {
            "get": {
                "description": "Stream audio file for playback. Redirects to the file URL",
                "produces": [
                    "audio/mpeg",
                    "audio/wav",
                    "audio/flac"
                ],
                "tags": [
                    "tracks"
                ],
                "summary": "Stream audio track",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Redirects to audio file"
                    },
                    "400": {
                        "description": "Invalid track ID",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Track is private",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Track not found",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/playlists": {
            "get": {
                "description": "Get all playlists created by a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlists"
                ],
                "summary": "Get user playlists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User playlists retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/rest.PlaylistListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/rest.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddTrackToPlaylistRequest": {
            "type": "object",
            "required": [
                "track_id"
            ],
            "properties": {
                "track_id": {
                    "type": "string"
                }
            }
        },
        "models.CreatePlaylistRequest": {
            "type": "object",
            "required": [
                "creator_id",
                "name"
            ],
            "properties": {
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "is_collaborative": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.FileMetadata": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "bitrate": {
                    "type": "integer"
                },
                "duration": {
                    "description": "seconds",
                    "type": "integer"
                },
                "genre": {
                    "type": "string"
                },
                "sample_rate": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "track": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.Playlist": {
            "type": "object",
            "required": [
                "creator_id",
                "name"
            ],
            "properties": {
                "cover_image_url": {
                    "description": "Playlist metadata",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_collaborative": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "total_duration": {
                    "description": "seconds",
                    "type": "integer"
                },
                "track_count": {
                    "description": "Computed fields",
                    "type": "integer"
                },
                "track_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SpotifyMetadata": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "album_art_url": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "confidence": {
                    "type": "number"
                },
                "duration_ms": {
                    "type": "integer"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "popularity": {
                    "type": "number"
                },
                "preview_url": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "spotify_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Track": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "enriched_metadata": {
                    "description": "Enriched metadata from Spotify",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.SpotifyMetadata"
                        }
                    ]
                },
                "file_path": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_url": {
                    "type": "string"
                },
                "filename": {
                    "description": "File information",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "mime_type": {
                    "type": "string"
                },
                "original_metadata": {
                    "description": "Original metadata from file",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.FileMetadata"
                        }
                    ]
                },
                "tags": {
                    "description": "Additional fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "upload_status": {
                    "description": "Status",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdatePlaylistRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_collaborative": {
                    "type": "boolean"
                },
                "is_public": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "rest.ErrorResponse": {
            "description": "Error response wrapper",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error description"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "rest.PaginationInfo": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 1
                },
                "has_next": {
                    "type": "boolean",
                    "example": true
                },
                "has_prev": {
                    "type": "boolean",
                    "example": false
                },
                "per_page": {
                    "type": "integer",
                    "example": 20
                },
                "total_items": {
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "rest.PlaylistListResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/rest.PaginationInfo"
                },
                "playlists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Playlist"
                    }
                }
            }
        },
        "rest.SuccessResponse": {
            "description": "Successful response wrapper",
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "rest.TrackListResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/rest.PaginationInfo"
                },
                "tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Track"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}