plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'co.edu.unal'
version = '0.0.1-SNAPSHOT'
description = 'Core backend API for managing campus events'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springGrpcVersion', "0.10.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	implementation "io.grpc:grpc-netty-shaded"
	implementation "io.grpc:grpc-stub"
	implementation "io.grpc:grpc-protobuf"
	implementation "com.google.protobuf:protobuf-java"

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-sqlserver'
	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'io.asyncer:r2dbc-mysql'
    implementation 'io.r2dbc:r2dbc-pool'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.flywaydb:flyway-mysql'

	
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
